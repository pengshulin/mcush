from VEnvironment import *

if haldir is None:
    # the last one is selected
    haldir = 'stm32f030xx'
    haldir = 'stm32f767zi_nucleo'
    haldir = 'stm32f207zg_nucleo'
    haldir = 'stm32f103ze_redbull'
    haldir = 'stm32f103rb_pyeasycontrol'
    haldir = 'stm32f207ve'
    haldir = 'stm32f103xb'
    haldir = 'stm32f407zg_eu'
    haldir = 'stm32f429ig_challenger'
    haldir = 'stm32f103cb_tiny_controller'
    haldir = 'stm32f411ce_weact'
    haldir = 'stm32f103c8_xtw'
    haldir = 'posix'

RTOS = 'RTX'
RTOS = 'RTTHREAD'
RTOS = 'FREERTOS'
RTOS = 'POSIX'

#env = loadHalConfig( haldir ).env
env = loadHalConfig( haldir, append_rtos=RTOS ).env
#env = loadHalConfig( haldir, append_rtos=RTOS, use_shell=False ).env
#env = loadHalConfig( haldir, use_vcp=True ).env
#env = loadHalConfig( haldir, use_vcp=False ).env
#env = loadHalConfig( haldir, use_spiffs=True ).env
#env = loadHalConfig( haldir, use_spiffs=True, use_fatfs=True ).env
#env = loadHalConfig( haldir, use_vfs=False ).env
#env = loadHalConfig( haldir, use_hal_driver=True ).env
#env = loadHalConfig( haldir, use_hal_driver=True, use_vcp=True ).env
#env = loadHalConfig( haldir, use_hal_driver=True, use_vcp=False ).env
#env = loadHalConfig( haldir, use_hal_driver=True, use_vcp=True, use_spiffs=True ).env
#env = loadHalConfig( haldir, use_hal_driver=True, use_vcp=False, use_spiffs=True ).env
#env = loadHalConfig( haldir, use_hal_driver=False ).env
#env = loadHalConfig( haldir, use_hal_driver=False, use_vcp=False ).env
#env = loadHalConfig( haldir, use_hal_driver=False, use_vcp=False, use_spiffs=True ).env

env.appendDefineFlags( [
    ] ) 

env.appendPath([
    '.',
])

env.appendGlobSource([
    '*.c',
])

env.makeApp()

